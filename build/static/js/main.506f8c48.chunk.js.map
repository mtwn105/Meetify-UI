{"version":3,"sources":["theme.js","components/VerticalTabBar.jsx","components/FormDialog.jsx","components/account/CreateAccountDialog.jsx","util.js","components/account/accountSlice.jsx","components/account/Login.jsx","components/intersect/intersectSlice.jsx","components/meet/meetSlice.jsx","components/RefreshButton.jsx","components/user/UserAvatar.jsx","components/user/UserTile.jsx","components/user/chat/ChatBubble.jsx","server.js","components/matches/matchesSlice.jsx","components/user/chat/ChatInput.jsx","components/user/chat/ChatView.jsx","components/account/EditProfileDialog.jsx","components/account/Account.jsx","components/SongTile.jsx","components/user/UserView.jsx","components/matches/MatchesView.jsx","components/meet/Meet.jsx","components/intersect/Intersect.jsx","components/matches/Matches.jsx","components/App.jsx","store.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","type","primary","light","main","dark","contrastText","secondary","pink","gray","error","red","tile","height","images","squareImageHeight","cardImageHeight","defaultOpts","deg","VerticalTabBar","props","Paper","square","className","style","backgroundColor","background","default","Tabs","orientation","value","activeIndex","children","getGradient","colors","opts","optsWithDefaults","Object","assign","length","useStyles","makeStyles","dialogContent","maxWidth","minWidth","paddingTop","spacing","cancelButton","color","submitButton","EditProfileDialog","classes","open","submitButtonDisabled","onClose","onCancel","onSubmit","title","submitButtonText","cancelButtonText","Dialog","AppBar","position","DialogTitle","DialogContent","DialogActions","Button","onClick","disabled","saveButton","editableMargin","marginTop","avatarRow","display","alignItems","avatarTextField","marginLeft","avatar","width","hintText","text","hint","useState","email","setEmail","password","setPassword","passwordRepeat","setPasswordRepeat","emailChanged","setEmailChanged","passwordChanged","setPasswordChanged","passwordRepeatChanged","setPasswordRepeatChanged","emailError","test","toLowerCase","checkValidEmail","passwordError","checkValidPassword","passwordRepeatError","useEffect","Typography","variant","TextField","label","helperText","fullWidth","required","onChange","e","target","inputProps","spellCheck","PROFILE_TEST_INFO","displayName","description","repeat","status","profilePicUrl","accountSlice","createSlice","name","initialState","loggedIn","username","profile","reducers","login","state","logout","setUsername","action","payload","editProfile","changes","console","log","actions","registerButton","Login","dispatch","useDispatch","useSelector","account","loginVisible","setLoginVisible","welcomeVisible","setWelcomeVisible","timeoutVar","setTimeoutVar","createDialogOpen","setCreateDialogOpen","clearTimeout","gridItemStyle","textAlign","paddingBottom","loginComp","Grid","item","xs","autoComplete","disableElevation","setTimeout","onSuccess","TRANSITION_DURATION","welcomeComp","loginRef","useRef","welcomeRef","CSSTransition","classNames","timeout","unmountOnExit","nodeRef","in","justify","alignContent","container","ref","obj","TEST_SONG_DATA","song","artist","album","albumArtUrl","intersectSlice","userId","songs","setUserId","setSongs","importSongs","concat","TEST_USERS","findMatches","createAsyncThunk","thunkAPI","a","Promise","resolve","meetSlice","matches","setMatches","clearMatches","extraReducers","fulfilled","button","margin","progress","RefreshButton","loading","buttonProps","activeComp","CircularProgress","size","thickness","IconButton","aria-label","UserAvatar","imgProps","avatarProps","firstLetter","toUpperCase","undefined","Avatar","root","refresh","right","top","closeButton","marginRight","UserTileActions","closeButtonDisabled","onCloseClick","songButtonDisabled","onSongsClick","actionButtonDisabled","onActionClick","actionButtonIcon","CardActions","disableSpacing","MemoizedUserTileActions","React","memo","UserTile","user","onProfileClick","cardProps","actionAreaProps","Card","raised","CardActionArea","CardHeader","src","padding","primaryColor","secondaryColor","timeText","ChatBubble","date","colorClass","elevation","toDateString","match","getShortDate","toTimeString","getShortTime","getShortDateTime","sendMessage","userFrom","userTo","TEST_MESSAGES","sender","Date","now","getTestChat","userObj","me","messages","map","o","loadMatches","chatsWithSenders","matchesSlice","textField","flexGrow","ChatInput","setText","placeholder","onSendClick","useCallback","then","finally","multiline","rowsMax","autoFocus","flexDirection","inputContainer","chatContainer","overflow","marginBottom","chat","chatBubble","chatRight","justifyContent","chatLeft","ChatView","otherUser","otherUserFirstName","split","inputPlaceholder","chats","m","i","otherUserSent","directionClass","key","left","onSave","descChange","setDescChange","dispNameChange","setDispNameChange","profPicChange","setProfPicChange","dispNameError","changeObj","trim","maxLength","MARGIN","HEADER_GRADIENT","BODY_GRADIENT","PROFILE_IMG_SIZE","Account","editable","editDialogOpen","setEditDialogOpen","openEditDialog","onEditDialogCancel","onEditDialogSave","Header","align","CardMedia","image","startIcon","Description","media","contents","subText","SongTile","component","CardContent","appBar","songTile","UserView","defaultTab","chatHidden","TABS_CONFIG","val","icon","row","index","filter","DEFAULT_TAB_INDEX","findIndex","activeTabIndex","setActiveTabIndex","activeComponent","Toolbar","textColor","tabs","Tab","tab","card","userView","matchesView","paddingRight","MatchesView","inMeetMode","onRefreshClick","selectedUser","selectUser","selectedTab","selectTab","userTiles","onChatClick","PROGRESS_HEIGHT","buttonProgress","initContainer","Meet","meet","currentUser","matchesPresent","showMatches","setShowMatches","searching","setSearching","buttonDisabled","setButtonDisabled","success","setSuccess","unwrapResult","Error","catch","err","initComp","Check","fontSize","Intersect","intersect","loggedInUserId","user1","user2","Matches","setLoading","reloadMatches","App","TAB_CONFIG","TAB_DEFAULT","activeTab","setActiveTab","x","find","componentIndex","mainAppComp","appRef","ThemeProvider","configureStore","reducer","accountReducer","intersectReducer","meetReducer","matchesReducer","middleware","thunk","Boolean","window","location","hostname","ReactDOM","render","StrictMode","CssBaseline","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.506f8c48.chunk.js","sourcesContent":["/*\n * Material UI theme and relevant utilities to use across the app\n *\n * Color customization:\n * https://material-ui.com/customization/color/\n *\n * All potential theme fields:\n * https://material-ui.com/customization/default-theme/\n */\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red'\nimport pink from '@material-ui/core/colors/pink'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      light: '#4ac776',\n      main: '#1DB954',\n      dark: '#14813a',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: pink[300],\n      main: pink[400],\n      dark: pink[500],\n      contrastText: '#000',\n    },\n    gray: {\n      light: '#474343',\n      main: '#191414',\n      dark: '#110e0e',\n      contrastText: '#000',\n    },\n    error: {\n      light: red[300],\n      main: red[400],\n      dark: red[500],\n    },\n  },\n  tile: {\n    height: '135px',\n  },\n  images: {\n    squareImageHeight: '150px',\n    cardImageHeight: '100px',\n  },\n})\n\nconst defaultOpts = {\n  deg: '90deg',\n}\n\ntheme.getGradient = (colors, opts) => {\n  if (!opts) opts = {}\n  const optsWithDefaults = Object.assign({}, defaultOpts, opts)\n\n  if (colors.length === 0)\n    return 'rgba(0, 0, 0, 0)'\n  else if (colors.length === 1)\n    return colors[0]\n  else if (colors.length === 2)\n    return `linear-gradient(${optsWithDefaults.deg}, ${colors[0]} 16%, ${colors[1]} 77%`\n  else\n    return `linear-gradient(${optsWithDefaults.deg}, ${colors[0]} 16%, ${colors[1]} 77%, ${colors[2]} 100%)`\n}\n\nexport { theme }\n","/*\n * Generic UI component for a vertical tab bar\n *\n * Props:\n *   - children = React JSX containing Tab items\n *   - activeIndex (int) = Index of currently active tab, which is then highlighted\n */\n\nimport React from 'react';\nimport { Paper, Tabs } from '@material-ui/core';\n\nimport {theme} from '../theme'\n\nexport default function VerticalTabBar (props){\n  return (\n    <Paper\n      square\n      className={props.className}\n      /* TODO: Nicer way to handle this? */\n      style={{backgroundColor: theme.palette.background.default}}\n    >\n      <Tabs\n        orientation=\"vertical\"\n        value={props.activeIndex || 0}\n      >\n        {props.children}\n      </Tabs>\n    </Paper>\n  );\n}\n","/*\n * Generic dialog for centrally styling form dialogs\n * Has a title area, contents, a cancel button, and a submit button\n *\n * Various props detailed within function itself\n *\n * Example usage:\n *<FormDialog\n *  open={true}\n *  title=\"My Form\"\n *  submitButtonText=\"Save Form\"\n *  onSubmit={() => handleSubmit()}\n *  onClose={() => handleClose()}\n *  onCancel={() => handleCancel()}\n *>\n *  <TextField\n *    label=\"My Text Field\"\n *    variant=\"outlined\"\n *  />\n *</FormDialog>\n *\n */\n\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {\n  AppBar,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  dialogContent: {\n    maxWidth: 600,\n    minWidth: 600,\n    paddingTop: theme.spacing(2)\n  },\n  cancelButton: {\n    color: theme.palette.error.light,\n  },\n  submitButton: {\n    color: theme.palette.primary.light,\n  },\n}))\n\nexport default function EditProfileDialog(props) {\n  const classes = useStyles()\n\n  const {\n    // Booleans\n    open, // true if dialog should open (from Material-UI)\n    submitButtonDisabled,\n\n    // Method callbacks\n    onClose,\n    onCancel,\n    onSubmit,\n\n    // Strings\n    title,\n    submitButtonText,\n    cancelButtonText,\n\n    // Other\n    children,\n  } = props\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => onClose && onClose()}\n      maxWidth=\"lg\"\n    >\n      <AppBar position=\"static\">\n        <DialogTitle>\n          { title || 'Form Dialog' }\n        </DialogTitle>\n      </AppBar>\n      <DialogContent className={classes.dialogContent}>\n        { children }\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => onCancel && onCancel()}\n          className={classes.cancelButton}\n        >\n          { cancelButtonText || 'Cancel' }\n        </Button>\n        <Button\n          onClick={() => onSubmit && onSubmit()}\n          className={classes.submitButton}\n          disabled={submitButtonDisabled}\n        >\n          { submitButtonText || 'Submit' }\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","/*\n * Dialog with fields for creating a new user account a user's profile\n * Events/data must be handled in parent\n */\n\nimport React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  checkValidEmail,\n  checkValidPassword,\n} from '../../util'\n\nimport {\n  TextField,\n  Typography,\n} from '@material-ui/core'\nimport FormDialog from '../FormDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  dialogContent: {\n    maxWidth: 600,\n    minWidth: 600,\n    paddingTop: theme.spacing(2)\n  },\n  cancelButton: {\n    // background: theme.palette.error.dark,\n    color: theme.palette.error.light,\n  },\n  saveButton: {\n    // background: theme.palette.primary.dark,\n    color: theme.palette.primary.light,\n  },\n  editableMargin: {\n    marginTop: theme.spacing(2)\n  },\n  avatarRow: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatarTextField: {\n    marginLeft: theme.spacing(2),\n  },\n  avatar: {\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n  },\n  hintText: {\n    color: theme.palette.text.hint\n  },\n}))\n\nexport default function EditProfileDialog(props) {\n  const {\n    open,\n    onCancel,\n    onSubmit,\n  } = props\n\n  const classes = useStyles()\n  const [ email, setEmail ] = useState('')\n  const [ password, setPassword ] = useState('')\n  const [ passwordRepeat, setPasswordRepeat ] = useState('')\n\n  // Monitor if user has changed a field so we don't report errors for doing nothing\n  const [ emailChanged, setEmailChanged ] = useState(false)\n  const [ passwordChanged, setPasswordChanged ] = useState(false)\n  const [ passwordRepeatChanged, setPasswordRepeatChanged ] = useState(false)\n\n  // Central location for field errors\n  // If there's an error, should be set to error reason. Otherwise should be false\n  const emailError = emailChanged &&\n        (!checkValidEmail(email) && 'Invalid email')\n  const passwordError = passwordChanged &&\n        (!checkValidPassword(password) && 'Password must be at least 10 characters')\n  const passwordRepeatError = passwordRepeatChanged &&\n        (password !== passwordRepeat && 'Passwords must match')\n\n  const submitButtonDisabled =\n        !email || !password || !passwordRepeat ||\n        !!emailError || !!passwordError || !!passwordRepeatError\n\n  // Reset any previous changes when opening\n  useEffect(() => {\n    if (open === true) {\n      setEmail('')\n      setPassword('')\n      setPasswordRepeat('')\n\n      setEmailChanged(false)\n      setPasswordChanged(false)\n      setPasswordRepeatChanged(false)\n    }\n  }, [open])\n\n  return (\n    <FormDialog\n      open={open}\n      title=\"Create Account\"\n      submitButtonText=\"Create Account\"\n      submitButtonDisabled={submitButtonDisabled}\n      onSubmit={() => onSubmit && onSubmit({email, password})}\n      onClose={() => onCancel && onCancel()}\n      onCancel={() => onCancel && onCancel()}\n    >\n      <Typography variant=\"body1\">\n        Welcome to <strong>Meetify</strong>! Before you start meeting people, we\n        just need some basic info...\n      </Typography>\n\n      <TextField\n        className={classes.editableMargin}\n        label=\"Email Address\"\n        variant=\"outlined\"\n        error={!!emailError}\n        helperText={emailError}\n        fullWidth\n        required\n        value={email}\n        onChange={(e) => {setEmail(e.target.value); setEmailChanged(true)}}\n        inputProps={{spellCheck: false}}\n      />\n\n      <Typography variant=\"body1\" className={`${classes.editableMargin} ${classes.hintText}`}>\n        We don't have restrictions on what's in your password, but <strong>make\n        it long!</strong> Password length is what really keeps you secure.\n\n        <br/><br/>\n\n        <strong>Our tip:</strong> Try a unique but easy-to-remember sentence, such as:<br/>\n        <em>\"Timetomeet42greatnewfriends!\"</em>\n      </Typography>\n\n      <TextField\n        className={classes.editableMargin}\n        label=\"Password\"\n        type=\"password\"\n        variant=\"outlined\"\n        error={!!passwordError}\n        helperText={passwordError}\n        fullWidth\n        required\n        value={password}\n        onChange={(e) => {setPassword(e.target.value); setPasswordChanged(true)}}\n      />\n      <TextField\n        className={classes.editableMargin}\n        label=\"Confirm Password\"\n        type=\"password\"\n        variant=\"outlined\"\n        error={!!passwordRepeatError}\n        helperText={passwordRepeatError}\n        fullWidth\n        required\n        value={passwordRepeat}\n        onChange={(e) => {setPasswordRepeat(e.target.value); setPasswordRepeatChanged(true)}}\n      />\n    </FormDialog>\n  )\n}\n","/*\n * File containing short utility methods for use across app\n */\n\nexport const getShortTime = (date) => {\n  // Original format: [hour]:[minute]:[second] [timezone]\n  const re = /[0-9]+:[0-9]+/\n  const matches = date.toTimeString().match(re)\n  return matches.length > 0 ? matches[0] : '(no time)'\n}\n\nexport const getShortDate = (date) => {\n  // Original format example: Wed Jul 28 1993\n  const re = /.+ [0-9]+ [0-9]+/\n  const matches = date.toDateString().match(re)\n  return matches.length > 0 ? matches[0] : '(no date)'\n}\n\nexport const getShortDateTime = (date) => {\n  return `${getShortDate(date)} ${getShortTime(date)}`\n}\n\n// True if valid email; originally supplied by:\n// https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\nexport const checkValidEmail = (email) => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  // TODO: Make max lengths universal in central config doc\n  return re.test(email.toLowerCase()) && email.length <= 254\n}\n\n// True if valid password\n// Do NOT check for symbols; UI should instead encourage long passwords\nexport const checkValidPassword = (password) => {\n  const re = /(.){10,}$/\n  // TODO: Make max lengths universal in central config doc\n  return re.test(password) && password.length <= 128\n}\n","/*\n * Redux slice for containing current user account data\n * Should be only written to within the Login component\n * (NOTE: Currently just uses test data)\n *\n * Sends to state.account\n */\n\nimport { createSlice } from '@reduxjs/toolkit'\n\n// Temporary test data for the profile\nconst PROFILE_TEST_INFO = {\n  displayName: 'Doug Douglas',\n  description: 'Hey! The name\\'s Doug, but you can call be \"D-D-D-Doug in da Hiz House\". Please talk to me. '.repeat(10),\n  status: 'Chillin\\'',\n  profilePicUrl: 'https://www.kindpng.com/picc/m/78-785827_user-profile-avatar-login-account-male-user-icon.png',\n}\n\nexport const accountSlice = createSlice({\n  name: 'account',\n  initialState: {\n    loggedIn: false,\n    username: '',\n    profile: {\n      displayName: '',\n      description: '',\n      status: '',\n      profilePicUrl: '',\n    }\n  },\n  reducers: {\n    login: state => {\n      state.loggedIn = true\n    },\n    logout: state => {\n      state.loggedIn = true\n    },\n    setUsername: (state, action) => {\n      state.username = action.payload\n      // TODO: Pull info from server based on username\n      //       (which should probably be async)\n      state.profile = {...PROFILE_TEST_INFO}\n    },\n    editProfile: (state, action) => {\n      // TODO: Send to server and receive again\n      const { changes } = action.payload\n      state.profile = { ...state.profile, ...changes }\n      console.log(state.profile)\n    }\n  }\n})\n\nexport const { login, logout, setUsername, editProfile } = accountSlice.actions\nexport default accountSlice.reducer\n","/*\n * UI component for the opening login screen w/ welcome animation\n * (NOTE: Currently just uses test data)\n */\n\nimport React, { useState, useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CSSTransition } from 'react-transition-group'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {\n  Button,\n  Divider,\n  Grid,\n  TextField,\n  Typography,\n} from '@material-ui/core'\nimport CreateAccountDialog from './CreateAccountDialog'\n\nimport { login, setUsername } from './accountSlice'\nimport { theme } from '../../theme'\n\nconst TRANSITION_DURATION = 500\nconst WELCOME_DURATION = 2000\n\nconst useStyles = makeStyles((theme) => ({\n  registerButton: {\n    color: theme.palette.secondary.light\n  },\n}))\n\nexport default function Login (props) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const username = useSelector(state => state.account.username)\n\n  const [password, setPassword] = useState('')\n  const [loginVisible, setLoginVisible] = useState(true)\n  const [welcomeVisible, setWelcomeVisible] = useState(false)\n  const [timeoutVar, setTimeoutVar] = useState(null)\n\n  const [createDialogOpen, setCreateDialogOpen] = useState(false)\n\n  const onLoginClick = () => {\n    // TODO: (Eventually) Query against server and emit success then\n\n    // Phase 1: Fade out login\n    setLoginVisible(false)\n\n    // Phase 2: Fade in welcome message\n    setWelcomeVisible(true)\n\n    // Phase 3: Emit success event after slight delay\n    setTimeoutVar(setTimeout(() => {\n      dispatch(setUsername(username))\n      dispatch(login())\n      if (props.onSuccess) props.onSuccess()\n    }, TRANSITION_DURATION + WELCOME_DURATION))\n  }\n\n  useEffect(() => {\n    return function cleanup() {\n      clearTimeout(timeoutVar) // Just in case!\n    }\n  })\n\n  const onRegisterClick = () => {\n    setCreateDialogOpen(true)\n  }\n\n  const onCreateAccountSubmit = (obj) => {\n    setCreateDialogOpen(false)\n  }\n\n  const gridItemStyle = { textAlign: 'center', paddingBottom: '10px' }\n\n  // Login component, where user enters username and password\n  const loginComp = (\n    <>\n      <Grid item style={gridItemStyle}>\n        <Typography variant='subtitle1' style={{color: theme.palette.text.hint}}>\n          Welcome to\n        </Typography>\n        <Typography variant='h3'>\n          Meetify\n        </Typography>\n      </Grid>\n      <Grid item style={gridItemStyle} xs={12}>\n        <TextField\n          label=\"Username\"\n          value={username}\n          onChange={(e) => dispatch(setUsername(e.target.value))}\n        />\n      </Grid>\n      <Grid item style={gridItemStyle} xs={12}>\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </Grid>\n      <Grid item style={gridItemStyle} xs={12}>\n        <Button\n          disableElevation\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={onLoginClick}\n        >\n          Login\n        </Button>\n      </Grid>\n      {/* TODO: Could add nice lilttle divider, but would need to mess with CSS */}\n      {/* <Grid item style={gridItemStyle} xs={12}> */}\n      {/*   <Divider/> */}\n      {/* </Grid> */}\n      <Grid item style={gridItemStyle} xs={12}>\n        <Button\n          disableElevation\n          color=\"secondary\"\n          onClick={onRegisterClick}\n          className={classes.registerButton}\n        >\n          Register\n        </Button>\n      </Grid>\n    </>\n  )\n\n  // Basic component where user is welcomed\n  const welcomeComp = (\n    <>\n      <Grid item style={gridItemStyle}>\n        <Typography variant='h3'>\n          Welcome, {username || 'user'}\n        </Typography>\n      </Grid>\n    </>\n  )\n\n  const loginRef = useRef(null)\n  const welcomeRef = useRef(null)\n\n  // Return final result with transitions prepped between login and welcome screen\n  // Note that weird \"absolute\" / \"relative\" interactions allow for\n  // transitions to happen on top of each other\n  return (\n    <div\n      style={{height: '100%', width: '100%', position: 'absolute'}}\n    >\n      {/* TODO: Would be nice to make this concise with common component, but\n                CSSTransition doesn't seem to like using \"in\" from a prop */}\n      <CSSTransition\n        classNames=\"fade\"\n        timeout={TRANSITION_DURATION}\n        unmountOnExit\n        style={{position: 'absolute', height: '100%', width: '100%'}}\n        nodeRef={loginRef}\n        in={loginVisible}\n      >\n        <Grid\n          style={{height: '100%', width: '100%', position: 'relative'}}\n          justify=\"center\"\n          alignContent=\"center\"\n          container\n          ref={loginRef}\n        >\n          {loginComp}\n        </Grid>\n      </CSSTransition>\n\n      <CSSTransition\n        classNames=\"fade\"\n        timeout={TRANSITION_DURATION}\n        unmountOnExit\n        style={{position: 'absolute', height: '100%', width: '100%'}}\n        nodeRef={welcomeRef}\n        in={welcomeVisible}\n      >\n        <Grid\n          style={{height: '100%', width: '100%', position: 'relative'}}\n          justify=\"center\"\n          alignContent=\"center\"\n          container\n          ref={welcomeRef}\n        >\n          {welcomeComp}\n        </Grid>\n      </CSSTransition>\n      <CreateAccountDialog\n        open={createDialogOpen}\n        onCancel={() => setCreateDialogOpen(false)}\n        onSubmit={onCreateAccountSubmit}\n      />\n    </div>\n  )\n}\n","/*\n * Redux slice for the Intersect component, caching the data in case of unmount\n * and handling server interactions\n * (NOTE: Currently just uses test data)\n *\n * Sends to state.intersect\n */\n\n// import { getPlaylistIntersect } from './server';\n\nimport { createSlice } from '@reduxjs/toolkit'\nexport const TEST_SONG_DATA = [\n  {\n    song: 'Welcome to the Black Parade',\n    artist: 'My Chemical Romance',\n    album: 'The Black Parade',\n    albumArtUrl: 'https://upload.wikimedia.org/wikipedia/en/c/c7/Welcome_to_the_Black_Parade_cover.jpg',\n  },\n  {\n    song: 'still feel.',\n    artist: 'half alive',\n    album: 'still feel.',\n    albumArtUrl: 'https://images.genius.com/024425b1a9cd97a94ca44950e780c138.1000x1000x1.jpg',\n  },\n  {\n    song: 'Ramen King',\n    artist: 'Pink Guy',\n    album: 'Pink Season',\n    albumArtUrl: 'https://upload.wikimedia.org/wikipedia/en/8/8b/Pink_Season.jpg',\n  },\n]\n\nexport const intersectSlice = createSlice({\n  name: 'account',\n  initialState: {\n    userId: '',\n    songs: [],\n  },\n  reducers: {\n    setUserId: (state, action) => {\n      state.userId = action.payload\n    },\n    setSongs: (state, action) => {\n      state.songs = action.payload\n    },\n    importSongs: (state, action) => {\n      // const user1 = action.payload.user1\n      // const user2 = action.payload.user2\n\n      // NOTE: Original test data; can make more robust or delete later\n      // getPlaylistIntersect(user1, user2).then((r) => {\n      //   // TODO: Clean this up\n      //   if (r.data) {\n      //     if (r.data.data) {\n      //       this.props.onUpdate({songs: r.data.data});\n      //     } else {\n      //       console.error('Invalid format', r);\n      //     }\n      //   } else {\n      //     console.error('Invalid format', r);\n      //   }\n      // }).catch((e) => {\n      //   console.log(e);\n      // });\n\n      // NOTE: Import temporary test data\n      state.songs = TEST_SONG_DATA\n        .concat(TEST_SONG_DATA)\n        .concat(TEST_SONG_DATA)\n    }\n  }\n})\n\nexport const { setUserId, setSongs, importSongs } = intersectSlice.actions\nexport default intersectSlice.reducer\n","\n/*\n * Redux slice for containing data for the Meet tab\n * (NOTE: Currently just uses test data)\n *\n * Sends to state.meet\n */\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { TEST_SONG_DATA } from '../intersect/intersectSlice'\n\n// Temporary test matched users\nexport const TEST_USERS = [{\n  profile: {\n    displayName: 'Dougy doug',\n    profilePicUrl: 'https:2x1dks3q6aoj44bz1r1tr92f-wpengine.netdna-ssl.com/wp-content/uploads/2017/05/Square-face-shape-bespke-unit-Bordered-700x700.png',\n    description: 'Dougy doug living in a dougy dog wourld',\n  },\n  songs: TEST_SONG_DATA.concat(TEST_SONG_DATA),\n  username: 'dougy-doug',\n},{\n  profile: {\n    displayName: 'Dougina Dougette',\n    profilePicUrl: 'https://cdn.shopify.com/s/files/1/2979/1564/files/Square_Final_large.png?v=1535503211',\n    description: 'Hello am Dougina, but you can call me Doug',\n  },\n  songs: TEST_SONG_DATA.concat(TEST_SONG_DATA).concat(TEST_SONG_DATA).concat(TEST_SONG_DATA),\n  username: 'dougette-rules-3000',\n}, {\n  profile: {\n    displayName: 'Dougronamopolis Jr. doug',\n    profilePicUrl: 'https://media.allure.com/photos/5771a6723b5256713da4b855/1:1/w_400%2Cc_limit/hair-ideas-2012-05-square-face-hairstyles-olivia-wilde.jpg',\n    description: 'Top of the morning to you, laddie. -Doug',\n  },\n  songs: TEST_SONG_DATA,\n  username: 'pish-posh-doug-sauce',\n}]\n\nconst findMatches = createAsyncThunk(\n  'meet/findMatchesStatus',\n  async ({ username }, thunkAPI) => {\n    // For now, just return test data after a pause\n    return new Promise(resolve => setTimeout(() => resolve(TEST_USERS), 2000))\n  }\n)\n\nconst meetSlice = createSlice({\n  name: 'meet',\n  initialState: {\n    // Array of dicts containing { displayname, profilePicUrl, songsMatched }\n    matches: [],\n  },\n  reducers: {\n    setMatches: (state, action) => {\n      state.matches = action.payload\n    },\n    clearMatches: state => {\n      state.matches = []\n    },\n  },\n  extraReducers: {\n    // When findMatches succeeds, do this with the result...\n    [findMatches.fulfilled]: (state, action) => {\n      state.matches = action.payload\n    },\n  }\n})\n\nexport { meetSlice, findMatches }\nexport const { setMatches, clearMatches } = meetSlice.actions\nexport default meetSlice.reducer\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {\n  CircularProgress,\n  IconButton,\n} from '@material-ui/core'\nimport RefreshIcon from '@material-ui/icons/Refresh'\n\n// TODO: De-couple with each other, centering progress on button\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  progress: {\n    margin: theme.spacing(1) + 12,\n  }\n}))\n\nexport default function RefreshButton (props) {\n  const classes = useStyles()\n  const { loading, ...buttonProps} = props\n\n  const activeComp = (loading && (\n    <CircularProgress\n      className={classes.progress}\n      size={24}\n      thickness={4.6}\n    />\n  )) || (\n    <IconButton\n      aria-label=\"refresh\"\n      {...buttonProps}\n      className={classes.button}\n    >\n      <RefreshIcon/>\n    </IconButton>\n  )\n\n  return (\n    <div className={props.className}>\n      { activeComp }\n    </div>\n  )\n}\n","/*\n * Basic wrapper for the Material UI \"Avatar\" component\n * Displays given user's profile picture\n *\n * If no profile picture given, defaults to the first letter of their display name\n * If no display name, defaults to a basic profile picture\n *\n * Props:\n * - displayName (String) = display name of the user\n * - src (String) = image URL of the profile picture (should be square!)\n * - All other props for the Avatar component\n */\n\nimport React from 'react'\nimport { Avatar } from '@material-ui/core'\n\nexport default function UserAvatar (props) {\n  if (!props) props = {}\n\n  // Pull out className for application to base img object within Avatar\n  // This allows for app to automatically figure out width based on image height\n  // NOTE: The intended look relies on a given src and a square image\n  //       If we want to support tiles having letters and defaults, we need to\n  //       Hard-code heights and widths somewhere.\n  const { className } = props\n  const imgProps = className ? {className} : {}\n\n  const { displayName, ...avatarProps } = props\n  const firstLetter = displayName ? displayName[0].toUpperCase() : undefined\n\n  return (\n    <Avatar {...avatarProps} imgProps={imgProps}>\n      {firstLetter}\n    </Avatar>\n  )\n}\n","/*\n * Component for a single tile containing basic information and actions\n * Contains 3 actionable areas:\n * - \"close\" button\n * - \"songs\" button\n * - \"action\" button (variant chat or add person button)\n * - \"profile\" action area\n *\n * However, event handling must be controlled from parent\n *\n * props:\n * - closeButtonDisabled, songButtonDisabled, actionButtonDisabled\n *     - [Boolean] if true, respective button is grayed and cannot be clicked\n * - actionButtonIcon\n *     - [React component] Material UI icon to display for the action button\n * - onCloseClick, onSongsClick, onActionClick, onProfileClick\n *     - [function] method to call upon clicking that particular area\n *\n */\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardHeader,\n  IconButton,\n} from '@material-ui/core'\n\nimport CloseIcon from '@material-ui/icons/Close'\nimport SongsIcon from '@material-ui/icons/LibraryMusic'\n\nimport UserAvatar from './UserAvatar'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n  },\n  refresh: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    // TODO: Re-define here and de-couple margin from refresh button\n    // margin: theme.spacing(1),\n  },\n  closeButton: {\n    color: theme.palette.error.light,\n    marginRight: 'auto',\n  },\n}))\n\nfunction UserTileActions(props) {\n  const classes = useStyles()\n\n  const {\n    closeButtonDisabled, onCloseClick,\n    songButtonDisabled, onSongsClick,\n    actionButtonDisabled, onActionClick,\n    actionButtonIcon,\n  } = props\n\n  return (\n    <CardActions disableSpacing>\n      <IconButton\n        className={classes.closeButton}\n        onClick={onCloseClick}\n        disabled={closeButtonDisabled}\n      >\n        <CloseIcon/>\n      </IconButton>\n      <IconButton\n        onClick={onSongsClick}\n        disabled={songButtonDisabled}\n      >\n        <SongsIcon/>\n      </IconButton>\n      <IconButton\n        color=\"primary\"\n        onClick={onActionClick}\n        disabled={actionButtonDisabled}\n      >\n        {actionButtonIcon}\n      </IconButton>\n    </CardActions>\n  )\n}\n\nconst MemoizedUserTileActions = React.memo(UserTileActions)\n\nexport default function UserTile (props) {\n  const classes = useStyles()\n\n  const {\n    user,\n    closeButtonDisabled, onCloseClick,\n    songButtonDisabled, onSongsClick,\n    actionButtonDisabled, onActionClick,\n    actionButtonIcon,\n    onProfileClick,\n    className,\n    ...cardProps\n  } = props\n\n  const actionAreaProps = {\n    closeButtonDisabled, onCloseClick,\n    songButtonDisabled, onSongsClick,\n    actionButtonDisabled, onActionClick, // TODO: Refactor to \"actionButton\" with variant icons\n    actionButtonIcon,\n  }\n\n  // TODO: Use memoize to possibly remedy performance issues\n\n  return (\n    <div className={className}>\n      <Card className={classes.root} raised {...cardProps}>\n        <CardActionArea onClick={onProfileClick}>\n          <CardHeader\n            avatar={\n              <UserAvatar src={user.profile.profilePicUrl} displayName={user.profile.displayName}/>\n            }\n            title={user.profile.displayName}\n          />\n        </CardActionArea>\n        <MemoizedUserTileActions\n          {...actionAreaProps}\n        />\n      </Card>\n    </div>\n  )\n}\n","/*\n * UI component for displaying one chat bubble\n *\n * Note that right/left props only control shape\n * Alignment should be handled in the parent\n *\n * props:\n * - text [String] = text to display\n * - right [Boolean] = true if bubble on right side\n * - left [Boolean] = true if bubble on left side\n * - color [String] = \"primary\" or \"secondary\"\n */\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { getShortDateTime } from '../../../util'\n\nimport {\n  Paper,\n  Typography,\n} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    padding: theme.spacing(1),\n  },\n  primaryColor: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  secondaryColor: {\n    backgroundColor: theme.palette.background.default\n  },\n  timeText: {\n    color: theme.palette.text.hint\n  },\n}))\n\nexport default function ChatBubble (props) {\n  const classes = useStyles()\n\n  const {\n    text,\n    date,\n    // TODO: Shape based on these\n    // left,\n    // right,\n    color,\n  } = props\n\n  const colorClass = color === 'secondary' ? classes.secondaryColor : classes.primaryColor\n\n  return (\n    <Paper className={`${classes.root} ${colorClass}`} elevation={1}>\n      <div>\n        <Typography variant=\"body2\">\n          {text}\n        </Typography>\n      </div>\n      <div>\n        <Typography variant=\"caption\" className={classes.timeText}>\n          {getShortDateTime(date)}\n        </Typography>\n      </div>\n    </Paper>\n  )\n\n\n}\n","/*\n * Various utility methods for use in connection with the server\n * (NOTE: Not yet supported or used)\n */\n\n// const axios = require('axios')\nimport axios from 'axios'\n\nconst SERVER_URL = 'http://localhost:8000'\n\n// joinUrl('www.some.link', 'sub', 'path') = 'www.some.link/sub/path'\n// NOTE: For now assumes all args are valid, i.e. no spaces and things\nconst joinUrl = (URL, ...args) => {\n  return URL + (URL.endsWith('/') ? '' : '/') + args.join('/')\n}\n\n// getUrlQuery({key: 'value'}) = '?key=value'\n// NOTE: For now assumes all keys/values are valid, i.e. no spaces and things\nconst getUrlQuery = (o) => {\n  return '?' + Object.keys(o).map(k => `${k}=${o[k]}`).join('&')\n}\n\nexport const getPlaylistIntersect = (userId1, userId2) => {\n  const query = getUrlQuery({ target: userId1, target2: userId2 })\n  const urlPath = joinUrl(SERVER_URL, 'polls', 'intersection', query)\n\n  console.info('Pulling data from:', urlPath)\n\n  return axios.get(urlPath, { mode: 'no-cors' })\n    .then((r) => {\n      return r\n    }).catch((e) => {\n      return e\n    })\n}\n\n// TODO: Test db here to actually apply changes\nexport const sendMessage = async ({userFrom, userTo, date, text}) => {\n  return new Promise(resolve => setTimeout(() => {\n    resolve()\n  }, 2000))\n}\n","\n/*\n * Redux slice for containing data for the Matches tab\n * (NOTE: Currently just uses test data)\n *\n * Sends to state.matches\n */\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { TEST_USERS } from '../meet/meetSlice'\n\n// Test messages\nconst TEST_MESSAGES = [\n  {\n    sender: 'other', // Injected soon\n    date: new Date(Date.now() - 15000),\n    text: 'Hey!'\n  },\n  {\n    sender: 'me',\n    date: new Date(Date.now() - 10000),\n    text: 'Hey man what\\'s up?',\n  },\n  {\n    sender: 'other',\n    date: new Date(Date.now() - 5000),\n    text: 'Please leave me alone I am sleepin',\n  },\n  {\n    sender: 'me',\n    date: new Date(Date.now() - 2000),\n    text: 'What?',\n  },\n  {\n    sender: 'other',\n    date: new Date(Date.now()),\n    text: 'I SAID I\\'M NO LONGER INTERESTED. PLEASE STOP CONTACTING ME OR I WILL CONTACT ATTORNEY GENERAL. THZSKS',\n  },\n]\n\n// Pin messages to user chat objects\nconst getTestChat = ({ userObj, me}) => {\n  const messages = [...TEST_MESSAGES].map(o => (\n    {...o, ...{ sender: o.sender === 'me' ? me : userObj.username }}\n  ))\n  return Object.assign({}, userObj, { messages })\n}\n\nconst loadMatches = createAsyncThunk(\n  'matches/loadMatchesStatus',\n  async ({ username }, thunkAPI) => {\n    // For now, just return test data after a pause\n    return new Promise(resolve => setTimeout(() => {\n      const chatsWithSenders = [...TEST_USERS].map(userObj => getTestChat({ userObj, me: username}))\n      resolve(chatsWithSenders)\n    }, 2000))\n  }\n)\n\nconst matchesSlice = createSlice({\n  name: 'matches',\n  initialState: {\n    // Array of dicts containing { displayname, profilePicUrl, songsMatched }\n    matches: []\n  },\n  reducers: {\n    setMatches: (state, action) => {\n      state.matches = action.payload\n    },\n    clearMatches: state => {\n      state.matches = []\n    },\n  },\n  extraReducers: {\n    // When findMatches succeeds, do this with the result...\n    [loadMatches.fulfilled]: (state, action) => {\n      state.matches = action.payload\n    },\n  }\n})\n\nexport { matchesSlice, loadMatches }\nexport const { setMatches, clearMatches } = matchesSlice.actions\nexport default matchesSlice.reducer\n","/*\n * UI Component for containing a chat input row\n * Displays a user input box and send button\n *\n * props:\n * - placeholder [String] = text to display in text box when no input\n * - onSendClick [Function] = method to call when the \"send\" button is clicked\n */\n\nimport React, { useCallback, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { sendMessage } from '../../../server'\nimport { loadMatches } from '../../matches/matchesSlice'\n\nimport { TextField, IconButton} from '@material-ui/core'\nimport SendIcon from '@material-ui/icons/Send'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n  },\n  textField: {\n    flexGrow: 1,\n    marginRight: theme.spacing(1),\n  },\n}))\n\nexport default function ChatInput (props) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const userFrom = useSelector(state => state.account.username)\n\n  // NOTE: This may be causing too many re-renders? But unsure how to mitigate\n  //       Doesn't appear to severely impact performance, given small component\n  const [text, setText] = useState()\n\n  const {\n    placeholder,\n    userTo,\n  } = props\n\n  const onSendClick = useCallback((text) => {\n    // TODO: Loading icons and things\n\n    // Send message to server\n    sendMessage({\n      userFrom,\n      userTo,\n      date: Date.now(),\n      text: text,\n    })\n    // Reload messages from server to ensure we're seeing it properly\n      .then(() => dispatch(loadMatches()))\n      .finally(() => {\n        setText('')\n      })\n  }, [dispatch, userTo, userFrom])\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        className={classes.textField}\n        variant=\"outlined\"\n        placeholder={placeholder || 'Message'}\n        multiline\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        rowsMax={4}\n        autoFocus\n      />\n\n      {/* Wrap in div so button doesn't grow in height */}\n      <div>\n        <IconButton onClick={onSendClick}>\n          <SendIcon/>\n        </IconButton>\n      </div>\n    </div>\n  )\n}\n","/*\n * An area for displaying messages between two users\n *\n * Message objects:\n * { date: Date, sender: String, text: String }\n *\n * props:\n * - messages [List] = Message objects to display contents of\n * - rightSender [String] = sender to put on the right side of screen;\n *                          other sender(s) will be put on the left\n */\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport ChatBubble from './ChatBubble'\nimport ChatInput from './ChatInput'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column-reverse',\n    position: 'relative',\n  },\n  inputContainer: {\n    width: '100%',\n  },\n  chatContainer: {\n    display: 'flex',\n    flexGrow: 1,\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column',\n    overflow: 'auto', // TODO: Make scrollbar look prettier?\n    marginBottom: theme.spacing(1)\n  },\n  chat: {\n    display: 'flex',\n    width: '100%',\n  },\n  chatBubble: {\n    maxWidth: '60%',\n    marginBottom: theme.spacing(1),\n  },\n  chatRight: {\n    justifyContent: 'flex-end',\n  },\n  chatLeft: {\n    justifyContent: 'flex-start',\n  },\n}))\n\nexport default function ChatView (props) {\n  const classes = useStyles()\n  const {\n    otherUser,\n  } = props\n\n  const { messages } = otherUser\n\n  const otherUserFirstName = otherUser.profile.displayName.split(' ')[0]\n  const inputPlaceholder = `Message ${otherUserFirstName}`\n\n  const chats = (messages || []).map((m, i) => {\n    const otherUserSent = m.sender === otherUser.username\n    const directionClass = otherUserSent ? classes.chatLeft : classes.chatRight\n    const color = otherUserSent ? 'secondary' : 'primary'\n\n    return (\n      <div className={`${classes.chat} ${directionClass}`} key={i}>\n        <div className={classes.chatBubble}>\n          <ChatBubble\n            color={color}\n            text={m.text}\n            date={m.date}\n            left={otherUserSent}\n            right={!otherUserSent}\n          />\n        </div>\n      </div>\n    )\n  })\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.inputContainer}>\n        <ChatInput\n          placeholder={inputPlaceholder}\n          userTo={otherUser.username}\n        />\n      </div>\n      <div className={classes.chatContainer}>\n        {chats}\n      </div>\n    </div>\n  )\n}\n","/*\n * Dialog with fields for editing a user's profile\n * Events/data must be handled in parent\n */\n\nimport React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {\n  TextField,\n} from '@material-ui/core'\nimport UserAvatar from '../user/UserAvatar'\nimport FormDialog from '../FormDialog'\n\nconst useStyles = makeStyles((theme) => ({\n  dialogContent: {\n    maxWidth: 600,\n    minWidth: 600,\n    paddingTop: theme.spacing(2)\n  },\n  cancelButton: {\n    // background: theme.palette.error.dark,\n    color: theme.palette.error.light,\n  },\n  saveButton: {\n    // background: theme.palette.primary.dark,\n    color: theme.palette.primary.light,\n  },\n  editableMargin: {\n    marginTop: theme.spacing(2)\n  },\n  avatarRow: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatarTextField: {\n    marginLeft: theme.spacing(2),\n  },\n  avatar: {\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n  },\n}))\n\nexport default function EditProfileDialog(props) {\n  const {\n    open,\n    onCancel,\n    onSave,\n    profile,\n  } = props\n\n  const {\n    description,\n    displayName,\n    profilePicUrl,\n  } = (profile || {})\n\n  const classes = useStyles()\n  const [ descChange, setDescChange ] = useState(null)\n  const [ dispNameChange, setDispNameChange ] = useState(null)\n  const [ profPicChange, setProfPicChange ] = useState(null)\n\n  const dispNameError = dispNameChange !== null && dispNameChange.length === 0\n\n  // Reset any previous changes when opening\n  useEffect(() => {\n    if (open === true) {\n      setDescChange(null)\n      setDispNameChange(null)\n      setProfPicChange(null)\n    }\n  }, [open])\n\n  const onSaveClick = () => {\n    if (!onSave) return\n\n    const changeObj = {}\n    if (descChange !== null) changeObj.description = descChange.trim()\n    if (dispNameChange !== null) changeObj.displayName = dispNameChange.trim()\n    if (profPicChange !== null) changeObj.profilePicUrl = profPicChange.trim()\n\n    onSave(changeObj)\n  }\n\n  return (\n    <FormDialog\n      open={open}\n      title=\"Edit Profile\"\n      submitButtonText=\"Save Changes\"\n      submitButtonDisabled={dispNameError}\n      onSubmit={onSaveClick}\n      onClose={() => onCancel && onCancel()}\n      onCancel={() => onCancel && onCancel()}\n    >\n      <span className={classes.avatarRow}>\n        <UserAvatar\n          className={classes.avatar}\n          src={profPicChange !== null ? profPicChange : profilePicUrl}\n          displayName={dispNameChange !== null ? dispNameChange : displayName}\n        />\n        {/* TODO: Image upload button? Paste button? */}\n        <TextField\n          className={classes.avatarTextField}\n          fullWidth\n          variant=\"outlined\"\n          label=\"Profile Picture URL\"\n          value={profPicChange !== null ? profPicChange : profilePicUrl}\n          onChange={(e) => setProfPicChange(e.target.value)}\n        />\n      </span>\n      <TextField\n        className={classes.editableMargin}\n        label=\"Display Name\"\n        variant=\"outlined\"\n        error={dispNameError}\n        helperText={dispNameError && \"Must be defined!\"}\n        fullWidth\n        required\n        placeholder=\"What should we call you?\"\n        value={dispNameChange !== null ? dispNameChange : displayName}\n        onChange={(e) => setDispNameChange(e.target.value)}\n        inputProps={{ maxLength: 18 }}\n      />\n      <TextField\n        className={classes.editableMargin}\n        label=\"Personal Description\"\n        variant=\"outlined\"\n        fullWidth\n        multiline\n        placeholder=\"Tell us about yourself!\"\n        rowsMax={6}\n        value={descChange !== null ? descChange : description}\n        onChange={(e) => setDescChange(e.target.value)}\n      />\n    </FormDialog>\n  )\n}\n","/*\n * UI component for viewing logged-in account details\n *\n * Props:\n * - username (String) = username of user's profile\n * - profile (obj) = { displayName, status, description }\n *   - (TODO: This should probably be a defined class)\n * - editable (Boolean) = true if should allow for editing\n *\n * TODO: Should rename to \"Profile\", which is more accurate\n *       Separate \"Account\" section should more be settings & logistics\n * TODO: Should have a \"editor\" mode where sections are editable\n */\n\nimport React, { useCallback, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { editProfile } from './accountSlice'\n\nimport {\n  Button,\n  Card,\n  CardMedia,\n  Grid,\n  Typography,\n} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit'\n\nimport EditProfileDialog from './EditProfileDialog'\n\nimport './Account.css'\nimport { theme } from '../../theme'\n\n// == CONSTANTS ==\n\nconst MAIN_CARD_MAX_WIDTH = '700px'\nconst MARGIN = '8px'\n\nconst HEADER_GRADIENT = theme.getGradient([theme.palette.background.default, theme.palette.primary.dark])\nconst BODY_GRADIENT = theme.getGradient([theme.palette.background.default, theme.palette.secondary.dark])\n\n// == TEMP TEST STUFF ==\n\nconst PROFILE_IMG_SIZE = theme.images.squareImageHeight\n\n// == CLASS ==\n\n// TODO: Rename to Profile (account settings could & should be separate!)\nexport default function Account (props) {\n  const dispatch = useDispatch()\n\n  const {\n    username,\n    profile,\n    editable,\n  } = props\n\n  const [ editDialogOpen, setEditDialogOpen ] = useState(false)\n\n  const openEditDialog = useCallback(() => {\n    setEditDialogOpen(true)\n  }, [setEditDialogOpen])\n  const onEditDialogCancel = useCallback(() => {\n    setEditDialogOpen(false)\n  }, [setEditDialogOpen])\n  const onEditDialogSave = useCallback((changes) => {\n    dispatch(editProfile({ changes }))\n    setEditDialogOpen(false)\n  }, [dispatch, setEditDialogOpen])\n\n  const Header = (() => (\n    <Card style={{width: '100%', background: HEADER_GRADIENT}}>\n      <Grid\n        container\n        justify=\"center\"\n        align=\"center\"\n        style={{width: '100%', margin: 0}}\n      >\n        <Grid item container xs={10}>\n          <Card style={{width: PROFILE_IMG_SIZE, margin: MARGIN, display: 'inline-flex'}}>\n            <CardMedia\n              image={profile.profilePicUrl}\n              title={username + '\\'s profile picture'}\n              style={{height: PROFILE_IMG_SIZE, width: PROFILE_IMG_SIZE}}\n            />\n          </Card>\n          <span style={{textAlign: 'left', margin: MARGIN, display: 'inline-flex', alignItems: 'center', flexGrow: 1}}>\n            <div style={{flexGrow: 1}}>\n              {/* TODO: Handle very long display names? */}\n              <Typography variant=\"h5\">\n                {profile.displayName}\n              </Typography>\n              <Typography variant=\"subtitle1\" style={{color: theme.palette.text.hint}}>\n                {username}\n              </Typography>\n              <Typography variant=\"subtitle1\" style={{color: theme.palette.text.hint}}>\n                {profile.status}\n              </Typography>\n            </div>\n            {editable &&\n             <Button\n               startIcon={<EditIcon/>}\n               variant=\"outlined\"\n               onClick={openEditDialog}\n             >\n               Edit Profile\n             </Button>\n            }\n          </span>\n        </Grid>\n      </Grid>\n    </Card>\n  ))\n\n  const Description = (() => (\n    <Grid\n      container\n      justify=\"center\"\n      align=\"center\"\n    // TODO: Background gradient, primary -> black\n      style={{width: '100%', margin: 0}}\n    >\n      <Grid item container xs={10}>\n        <Card\n          style={{width: '100%',\n                  margin: MARGIN,\n                  padding: MARGIN,\n                  textAlign: 'left',}}\n        >\n          <Typography variant=\"h6\">\n            Personal Description\n          </Typography>\n          <Typography variant=\"body1\">\n            {profile.description}\n          </Typography>\n        </Card>\n      </Grid>\n    </Grid>\n  ))\n\n  return (\n    <div style={{width: '100%', alignItems: 'middle'}}>\n      <Card\n        style={{padding: 0,\n                maxWidth: MAIN_CARD_MAX_WIDTH,\n                margin: 'auto',\n                background: BODY_GRADIENT}}\n      >\n        {/* TODO: Probably should put all \"Grid\" type stuff here for easier modifications */}\n        <Header/>\n        <Description/>\n      </Card>\n      <EditProfileDialog\n        open={editDialogOpen}\n        onCancel={onEditDialogCancel}\n        onSave={onEditDialogSave}\n        profile={profile}\n      />\n    </div>\n  );\n}\n","/*\n * UI component for a single \"tile\" displaying passed song information\n *\n * Props (all Strings):\n *   - song        (String)\n *   - artist      (String)\n *   - album       (String)\n *   - albumArtUrl (String)\n *\n * ^ If any are not included, it will simply be excluded from display\n */\n\nimport React from 'react';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n} from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    height: '100%',\n    width: '100%',\n  },\n  media: {\n    height: '100%',\n    width: 'auto'\n  },\n  contents: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  subText: {\n    color: theme.palette.text.secondary\n  },\n}))\n\nexport default function SongTile (props) {\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.root} raised>\n      {/*Album Art*/}\n      <CardMedia\n        image={props.albumArtUrl}\n        title={props.album + ' album cover'}\n        className={classes.media}\n        component=\"img\"\n      />\n\n      {/*Song detail display*/}\n      <div className={classes.contents}>\n        {/* TODO: Horizontal-scroll if too long */}\n        <CardContent>\n          <Typography variant=\"h6\">\n            {props.song}\n          </Typography>\n          <Typography variant=\"subtitle1\" className={classes.subText}>\n            {props.artist}\n          </Typography>\n          <Typography variant=\"caption\" className={classes.subText}>\n            {props.album}\n          </Typography>\n        </CardContent>\n      </div>\n    </Card>\n  )\n}\n","/*\n * Component for viewing and interacting with a user\n *\n * props:\n * - onCloseClick [function] = method to call when the \"close\" button is clicked\n * - user [obj] = user object, as formatted in store\n */\n\nimport React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {\n  AppBar,\n  IconButton,\n  Paper,\n  Tab,\n  Tabs,\n  Toolbar,\n  Typography,\n} from '@material-ui/core'\nimport ProfileIcon from '@material-ui/icons/AccountCircle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport SongsIcon from '@material-ui/icons/LibraryMusic'\n\nimport ChatView from './chat/ChatView'\nimport Account from '../account/Account'\nimport SongTile from '../SongTile'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n  },\n  // TODO: Can't scroll on overflow\n  contents: {\n    padding: theme.spacing(3),\n    paddingTop: 60 + theme.spacing(3),\n    height: '100%',\n    overflow: 'auto',\n  },\n  appBar: {\n    position: 'absolute',\n    top: 0,\n  },\n  songTile: {\n    height: theme.tile.height,\n    width: '100%',\n    padding: '8px',\n  },\n  title: {\n    flexGrow: 1,\n  },\n}))\n\nexport default function UserView (props) {\n  const classes = useStyles()\n\n  const {\n    onCloseClick,\n    user,\n    defaultTab,\n    chatHidden,\n  } = props\n\n  const {\n    songs,\n    profile,\n    username,\n  } = user\n\n  const TABS_CONFIG = [{\n    val: 'profile',\n    icon: <ProfileIcon/>,\n    component: <Account username={username} profile={profile}/>,\n  }, {\n    val: 'songs',\n    icon: <SongsIcon/>,\n    component: songs.map((row, index) => (\n      <div className={classes.songTile} key={index}>\n        <SongTile\n          song={row.song}\n          artist={row.artist}\n      /* album={row.album} */\n          albumArtUrl={row.albumArtUrl}\n        />\n      </div>\n    )),\n  }, {\n    val: 'chat',\n    icon: <ChatIcon/>,\n    component: (\n      <ChatView\n        otherUser={user}\n      />\n    ),\n  }].filter(o => !(o.val === 'chat' && chatHidden))\n\n  const DEFAULT_TAB_INDEX = (defaultTab && TABS_CONFIG.findIndex(o => o.val === defaultTab)) || 0\n  const [activeTabIndex, setActiveTabIndex] = useState(DEFAULT_TAB_INDEX)\n\n  useEffect(() => {\n    setActiveTabIndex(DEFAULT_TAB_INDEX)\n  }, [DEFAULT_TAB_INDEX])\n\n  const activeComponent = TABS_CONFIG[activeTabIndex].component\n\n  return (\n    <Paper className={classes.root} elevation={5}>\n      <AppBar className={classes.appBar} elevation={1}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            { user.profile.displayName }\n          </Typography>\n          <Tabs value={activeTabIndex} textColor=\"inherit\" className={classes.tabs}>\n            {TABS_CONFIG.map((o, i) => (\n              <Tab key={o.val} label={o.val}\n                   icon={o.icon}\n                   onClick={() => setActiveTabIndex(i)}\n                   className={classes.tab}/>\n            ))}\n          </Tabs>\n          <IconButton color=\"inherit\" onClick={onCloseClick}>\n            <CloseIcon/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <div className={classes.contents}>\n        {activeComponent}\n      </div>\n    </Paper>\n  )\n}\n","\n/*\n * Component for displaying the general \"Matches\" view\n *\n * Intended to be more general and used between both \"Matches\" and \"Meet\" tabs,\n * given their similarities. Noted as \"Match\" since \"Meet\" is a special case,\n * disabling some items\n *\n * If using this for meeting, inMeetMode flag should be used\n * This has the following changes:\n * - \"Chat\" button -> \"Add Person\" button\n * - No chat tab when viewing the user\n */\n\nimport React, { useState } from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {\n  Grid,\n} from '@material-ui/core'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\nimport RefreshButton from '../RefreshButton'\nimport UserTile from '../user/UserTile'\nimport UserView from '../user/UserView'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n  },\n  card: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n    maxWidth: 275,\n  },\n  refresh: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    // TODO: Re-define here and de-couple margin from refresh button\n    // margin: theme.spacing(1),\n  },\n  userView: {\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n  },\n  matchesView: {\n    height: '100%',\n    width: '100%',\n    paddingRight: 50,\n    position: 'relative',\n  },\n}))\n\nexport default function MatchesView (props) {\n  const classes = useStyles()\n\n  const {\n    inMeetMode,\n    matches,\n    onRefreshClick,\n    onCloseClick,\n    loading,\n  } = props\n\n  const [ selectedUser, selectUser ] = useState(null)\n  const [ selectedTab, selectTab ] = useState(null)\n\n  const onChatClick =({user}) => {\n    selectTab('chat')\n    selectUser(user)\n  }\n  const onAddClick = ({user}) => {\n    console.log('Adding!')\n  }\n  const onProfileClick =({user}) => {\n    selectTab('profile')\n    selectUser(user)\n  }\n  const onSongsClick = ({user}) => {\n    selectTab('songs')\n    selectUser(user)\n  }\n  const closeUserView = () => {\n    selectUser(null)\n  }\n\n  const userTiles = matches.map((user, i) => (\n    <UserTile\n      key={i}\n      className={classes.card}\n      user={user}\n      onActionClick={() => inMeetMode ? onAddClick({user}) : onChatClick({user})}\n      onProfileClick={() => onProfileClick({user})}\n      onCloseClick={() => onCloseClick && onCloseClick({user})}\n      onSongsClick={() => onSongsClick({user})}\n      actionButtonIcon={inMeetMode ? <PersonAddIcon/> : <ChatIcon/>}\n    />\n  ))\n\n  const userView = (\n    <div className={classes.userView}>\n      <UserView\n        onCloseClick={closeUserView}\n        user={selectedUser}\n        defaultTab={selectedTab}\n        chatHidden={inMeetMode}\n      />\n    </div>\n  )\n\n  const matchesView = (\n    <div className={classes.matchesView}>\n      <Grid container alignItems=\"flex-start\" justify=\"flex-start\">\n        { userTiles }\n      </Grid>\n      <RefreshButton\n        onClick={() => onRefreshClick && onRefreshClick()}\n        loading={loading}\n        className={classes.refresh}\n      />\n    </div>\n  )\n\n  return (\n    <div className={classes.root}>\n      { matchesView }\n      { selectedUser && userView }\n    </div>\n  )\n}\n","/*\n * UI component for the \"Meet\" section of the app, allowing people to find\n * others with like music interests\n */\n\nimport React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { unwrapResult } from '@reduxjs/toolkit'\nimport { findMatches, clearMatches } from './meetSlice'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {\n  Button,\n  CircularProgress,\n  Grid,\n  Typography,\n} from '@material-ui/core'\nimport { Check } from '@material-ui/icons'\n\nimport MatchesView from '../matches/MatchesView'\n\nconst BUTTON_HEIGHT = 70\nconst PROGRESS_HEIGHT = BUTTON_HEIGHT / 1.5\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    height: BUTTON_HEIGHT,\n  },\n  buttonProgress: {\n    color: theme.palette.primary.main,\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginLeft: (-PROGRESS_HEIGHT)/2,\n    marginTop: (-PROGRESS_HEIGHT)/2,\n  },\n  initContainer: {\n    display: 'flex',\n    height: '100%',\n    width: '100%',\n  },\n  tile: {\n    height: theme.tile.height,\n    width: '100%',\n    padding: '8px',\n  },\n}))\n\nexport default function Meet () {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const matches = useSelector(state => state.meet.matches)\n  const currentUser = useSelector(state => state.account.username)\n\n  const matchesPresent = matches && matches.length > 0\n  const [showMatches, setShowMatches] = useState(matchesPresent)\n\n  const [searching, setSearching] = useState(false)\n  const [buttonDisabled, setButtonDisabled] = useState(false)\n  const [success, setSuccess] = useState(false)\n\n  let timeout = null\n\n  useEffect(() => (clearTimeout(timeout)))\n\n  function onRefreshClick () {\n    // Change UI to indicate loading\n    setButtonDisabled(true)\n    setSearching(true)\n\n    // Find matches from server and handle accordingly\n    dispatch(findMatches({ username: currentUser }))\n      .then(unwrapResult)\n      .then(async (matches) => {\n        setSearching(false)\n\n        if (matches && matches.length > 0) {\n          setSuccess(true)\n\n          // Run success animation before showing matches\n          timeout = setTimeout(() => {\n            setShowMatches(true)\n            setSuccess(false)\n            setButtonDisabled(false)\n          }, 2000)\n\n        } else throw Error(\"No matches found.\")\n\n      }).catch((err) => {\n        setSearching(false)\n        console.error(\"Error in finding matches\", err)\n\n        // TODO: Display error alert with more details\n        setShowMatches(false)\n        setSuccess(false)\n        setButtonDisabled(false)\n        dispatch(clearMatches())\n      })\n  }\n\n  // TODO: Put this logic into a re-usable component\n  // TODO: Add animation between progress and check\n  const initComp = (\n    <div className={classes.initContainer}>\n      <Grid\n        justify=\"center\"\n        alignContent=\"center\"\n        container\n      >\n        <Button\n          variant=\"contained\"\n          className={classes.button}\n          size=\"large\"\n          color=\"primary\"\n          disabled={buttonDisabled}\n          onClick={onRefreshClick}\n        >\n          <Typography variant=\"h4\">\n            Meetify!\n          </Typography>\n\n          {searching && !success &&\n           <CircularProgress\n             className={classes.buttonProgress}\n             size={PROGRESS_HEIGHT}\n           />}\n\n          {success &&\n           <Check\n             className={classes.buttonProgress}\n             style={{fontSize: PROGRESS_HEIGHT}}\n           />}\n        </Button>\n      </Grid>\n    </div>\n  )\n\n  const meetView = (\n    <MatchesView\n      inMeetMode\n      matches={matches}\n      loading={searching}\n      onRefreshClick={onRefreshClick} // TODO\n      onCloseClick={() => {}}   // TODO\n    />\n  )\n  // TODO: Add fade animation between these, possibly put into generic component first\n  if (showMatches) return meetView\n  else return initComp\n}\n","/*\n * \"Intersect\" portion of the app, selectable from the tab bar\n * Allows current user to intersect their liked songs with another user\n * (NOTE: Currently just contains test data)\n */\n\nimport React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setUserId, importSongs } from './intersectSlice'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport SongTile from '../SongTile';\n\nconst useStyles = makeStyles((theme) => ({\n  songTile: {\n    height: theme.tile.height,\n    width: '100%',\n    padding: '8px',\n  }\n}))\n\nexport default function Intersect (props) {\n  const classes = useStyles()\n\n  // Use state primarily to maintain an internal \"cache\" when this gets unmounted\n  const userId = useSelector(state => state.intersect.userId)\n  const songs = useSelector(state => state.intersect.songs)\n  const dispatch = useDispatch()\n\n  const loggedInUserId = useSelector(state => state.account.username)\n\n  const handleSubmit = () => {\n    dispatch(importSongs({user1: loggedInUserId, user2: userId}))\n  }\n\n  return (\n    <div>\n      <Grid\n        container\n        alignItems=\"center\"\n        spacing={2}\n      >\n        <Grid item>\n          <TextField\n            label=\"Other User's ID\"\n            variant=\"outlined\"\n            value={userId}\n            onChange={e => dispatch(setUserId(e.target.value))}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            disableElevation\n            color=\"primary\"\n            onClick={() => handleSubmit()}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n\n      {/* TODO: Make scrollable, e.g.... */}\n      {/* <div style={{ overflowY: 'auto', height: '200px' }}> */}\n      <div>\n        {songs.map((row, index) => (\n          <div className={classes.songTile} key={index}>\n            <SongTile\n              song={row.song}\n              artist={row.artist}\n              /* album={row.album} */\n              albumArtUrl={row.albumArtUrl}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","/*\n * Component for displaying the Matches tab, showing users who have been\n * previously matched, allowing for chats, profile, etc.\n *\n * Takes data from the state.matches\n */\n\nimport React, { useEffect, useState, useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { loadMatches } from './matchesSlice'\n\nimport MatchesView from './MatchesView'\n\nexport default function Matches (props) {\n  const dispatch = useDispatch()\n\n  const currentUser = useSelector((state) => state.account.username)\n  const matches = useSelector((state) => state.matches.matches)\n\n  const [ loading, setLoading ] = useState(false)\n\n  // useCallback necessary for object creation\n  // https://dmitripavlutin.com/dont-overuse-react-usecallback/\n  const reloadMatches = useCallback((opts) => {\n    setLoading(true)\n    dispatch(loadMatches({ username: currentUser }))\n      .catch((e) => { console.error(e) })\n      .finally(() => { setLoading(false) })\n  }, [dispatch, currentUser])\n\n  // Automatically load or reload chats upon opening the tab\n  useEffect(reloadMatches, [reloadMatches])\n\n  const onCloseClick =({user}) => {\n    console.log('closing...')\n  }\n\n  return (\n    <MatchesView\n      matches={matches}\n      loading={loading}\n      onRefreshClick={reloadMatches}\n      onCloseClick={onCloseClick}\n    />\n  )\n}\n","/*\n * UI component for the main entry point for the app\n */\n\nimport React, { useState, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport { Tab, Paper } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { useSelector } from 'react-redux'\n\nimport VerticalTabBar from './VerticalTabBar'\nimport Login from './account/Login'\n\nimport Meet from './meet/Meet'\nimport Intersect from './intersect/Intersect'\nimport Account from './account/Account'\nimport Matches from './matches/Matches'\n\nimport { theme } from '../theme'\nimport './App.css'\n\nconst TRANSITION_DURATION = 500\n\nexport default function App () {\n  const loggedIn = useSelector((state) => state.account.loggedIn)\n  const username = useSelector((state) => state.account.username)\n  const profile = useSelector((state) => state.account.profile)\n\n  const TAB_CONFIG = [{\n    label: 'Meet',\n    val: 'meet',\n    component: <Meet/>,\n  },{\n    label: 'Matches',\n    val: 'matches',\n    component: <Matches/>\n  }, {\n    label: 'Intersect',\n    val: 'intersect',\n    component: <Intersect/>,\n  }, {\n    label: 'Profile',\n    val: 'profile',\n    component: <Account username={username} profile={profile} editable/>,\n  }];\n\n  const TAB_DEFAULT = TAB_CONFIG[0].val\n\n  const [activeTab, setActiveTab] = useState(TAB_DEFAULT)\n\n  const getActiveComponent = () => TAB_CONFIG.find(x => x.val === activeTab).component\n  const getActiveComponentIndex = () => TAB_CONFIG.findIndex(x => x.val === activeTab)\n\n  const tabs = TAB_CONFIG.map((x) => (\n    <Tab\n      key={x.val}\n      label={x.label}\n      onClick={() => setActiveTab(x.val)}\n    />\n  ))\n\n  const component = getActiveComponent();\n  const componentIndex = getActiveComponentIndex();\n\n  const mainAppComp = (\n    <>\n      <VerticalTabBar className=\"tab-bar\" activeIndex={componentIndex}>\n        {tabs}\n      </VerticalTabBar>\n      <div className=\"main-container\">\n        {component}\n      </div>\n    </>\n  )\n\n  const loginRef = useRef(null)\n  const appRef = useRef(null)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className=\"app-root\" square style={{position:'relative'}}>\n        {/* TODO: Try to make this into generic transition component */}\n        <CSSTransition\n          classNames=\"fade\"\n          timeout={TRANSITION_DURATION}\n          unmountOnExit\n          style={{position: 'absolute', height: '100%', width: '100%'}}\n          nodeRef={loginRef}\n          in={!loggedIn}\n        >\n          <div ref={loginRef}>\n            <Login/>\n          </div>\n        </CSSTransition>\n\n        <CSSTransition\n          classNames=\"fade\"\n          timeout={TRANSITION_DURATION}\n          unmountOnExit\n          style={{position: 'absolute', height: '100%', width: '100%'}}\n          nodeRef={appRef}\n          in={loggedIn}\n        >\n          <div ref={appRef}>\n            <div style={{display: 'flex', height: '100%', width: '100%'}}>\n              {mainAppComp}\n            </div>\n          </div>\n        </CSSTransition>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n","/*\n * Main Redux store setup used for enhanced data management\n * For more information: https://redux.js.org/\n */\n\nimport { configureStore } from '@reduxjs/toolkit'\nimport thunk from 'redux-thunk' // Allows for asynchronous dispatches\n\nimport accountReducer from './components/account/accountSlice'\nimport intersectReducer from './components/intersect/intersectSlice'\nimport meetReducer from './components/meet/meetSlice'\nimport matchesReducer from './components/matches/matchesSlice'\n\nexport default configureStore({\n  reducer: {\n    account: accountReducer,\n    intersect: intersectReducer,\n    meet: meetReducer,\n    matches: matchesReducer,\n  },\n  middleware: [thunk],\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * App entry-point\n * Sets up any styles & preferences then displays entry UI component\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style/index.css';\nimport './style/transitions.css';\n\nimport App from './components/App';\nimport store from './store';\n\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import theme from './theme' // TODO: put theme here\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline/>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}